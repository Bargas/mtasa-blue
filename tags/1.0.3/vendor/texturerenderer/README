******************************************************************************
*                                                                            *
* DirectX Video-to-texture renderer v1.2                                     *
*                                                                            *
* (C) Cecill "IJs" Etheredge / Multi Theft Auto, 2009                        *
*               <ijsf@gmx.net, http://ijs.mtasa.com/>                        *
*                                                                            *
******************************************************************************

==============================================================================
- DESCRIPTION                                                                -
==============================================================================
  This project contains a DirectShow video renderer interface that is
  capable of rendering directly to a Direct3D 9 texture that is heavily based
  on the Texture3D9 sample in the Windows Server 2003 R2 Platform SDK. This
  code automatically builds a DirectShow graph that decodes the video,
  renders it's output to the texture renderer filter that is easily accessed
  through a C++ interface.

  As with most DirectShow players, video support depends on the codecs that
  have been registered by Windows. If you're looking for code that can
  manually load .ax files, regardless of being registered system-wide, look
  up an earlier version of this software on the Multi Theft Auto repository.

  Experimenting with DirectShow graphs, and debugging your graph creation code
  can be done easily with the graphedt.exe tool in the Windows Server 2003 R2
  Platform SDK (or higher).

  In order for this project to compile and to be used, you will need the
  latest Microsoft Windows Platform SDK containing all the necessary
  DirectShow libraries and headers. The strmbase and strmbasd libraries can
  be found in the DirectShow base classes directory that is distributed
  with the above SDK.

  Precompiled libraries have been built with Microsoft Visual Studio 2008.

